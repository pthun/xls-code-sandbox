"""
This type stub file was generated by pyright.
"""

import enum
from typing import Any, List, Optional, Tuple, Union

class ChartType(str, enum.Enum):
    """
    Chart types
    """
    LINE = ...
    SCATTER = ...
    BAR = ...
    PIE = ...
    BOX_AND_WHISKER = ...
    SUPERCHART = ...
    UNKNOWN = ...


class ScaleType(str, enum.Enum):
    """
    Ax scale types
    """
    LINEAR = ...
    DATETIME = ...
    CATEGORICAL = ...
    LOG = ...
    SYMLOG = ...
    LOGIT = ...
    FUNCTION = ...
    FUNCTIONLOG = ...
    ASINH = ...
    UNKNOWN = ...


class Chart:
    """
    Extracted data from a chart. It's useful for building an interactive charts or custom visualizations.
    """
    type: ChartType
    title: str
    elements: List[Any]
    def __init__(self, **kwargs) -> None:
        ...
    
    def to_dict(self) -> dict:
        ...
    


class Chart2D(Chart):
    x_label: Optional[str]
    y_label: Optional[str]
    x_unit: Optional[str]
    y_unit: Optional[str]
    def __init__(self, **kwargs) -> None:
        ...
    


class PointData:
    label: str
    points: List[Tuple[Union[str, float], Union[str, float]]]
    def __init__(self, **kwargs) -> None:
        ...
    


class PointChart(Chart2D):
    x_ticks: List[Union[str, float]]
    x_tick_labels: List[str]
    x_scale: ScaleType
    y_ticks: List[Union[str, float]]
    y_tick_labels: List[str]
    y_scale: ScaleType
    elements: List[PointData]
    def __init__(self, **kwargs) -> None:
        ...
    


class LineChart(PointChart):
    type = ...


class ScatterChart(PointChart):
    type = ...


class BarData:
    label: str
    group: str
    value: str
    def __init__(self, **kwargs) -> None:
        ...
    


class BarChart(Chart2D):
    type = ...
    elements: List[BarData]
    def __init__(self, **kwargs) -> None:
        ...
    


class PieData:
    label: str
    angle: float
    radius: float
    def __init__(self, **kwargs) -> None:
        ...
    


class PieChart(Chart):
    type = ...
    elements: List[PieData]
    def __init__(self, **kwargs) -> None:
        ...
    


class BoxAndWhiskerData:
    label: str
    min: float
    first_quartile: float
    median: float
    third_quartile: float
    max: float
    outliers: List[float]
    def __init__(self, **kwargs) -> None:
        ...
    


class BoxAndWhiskerChart(Chart2D):
    type = ...
    elements: List[BoxAndWhiskerData]
    def __init__(self, **kwargs) -> None:
        ...
    


class SuperChart(Chart):
    type = ...
    elements: List[Union[LineChart, ScatterChart, BarChart, PieChart, BoxAndWhiskerChart]]
    def __init__(self, **kwargs) -> None:
        ...
    


ChartTypes = Union[LineChart, ScatterChart, BarChart, PieChart, BoxAndWhiskerChart, SuperChart]
