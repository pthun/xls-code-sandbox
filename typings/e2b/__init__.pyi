"""
This type stub file was generated by pyright.
"""

from .api import ApiClient, client
from .connection_config import ConnectionConfig, ProxyTypes
from .exceptions import AuthenticationException, InvalidArgumentException, NotEnoughSpaceException, NotFoundException, SandboxException, TemplateException, TimeoutException
from .sandbox.sandbox_api import SandboxInfo, SandboxMetrics, SandboxQuery, SandboxState
from .sandbox.commands.main import ProcessInfo
from .sandbox.commands.command_handle import CommandExitException, CommandResult, PtyOutput, PtySize, Stderr, Stdout
from .sandbox.filesystem.watch_handle import FilesystemEvent, FilesystemEventType
from .sandbox.filesystem.filesystem import EntryInfo, FileType, WriteInfo
from .sandbox_sync.main import Sandbox
from .sandbox_sync.filesystem.watch_handle import WatchHandle
from .sandbox_sync.commands.command_handle import CommandHandle
from .sandbox_async.paginator import AsyncSandboxPaginator
from .sandbox_async.utils import OutputHandler
from .sandbox_async.main import AsyncSandbox
from .sandbox_async.filesystem.watch_handle import AsyncWatchHandle
from .sandbox_async.commands.command_handle import AsyncCommandHandle
from .sandbox_sync.paginator import SandboxPaginator
from .template.main import TemplateBase, TemplateClass
from .template_sync.main import Template
from .template_async.main import AsyncTemplate
from .template.exceptions import BuildException, FileUploadException
from .template.readycmd import wait_for_file, wait_for_port, wait_for_process, wait_for_timeout, wait_for_url

"""
Secure sandboxed cloud environments made for AI agents and AI apps.

Check docs [here](https://e2b.dev/docs).

E2B Sandbox is a secure cloud sandbox environment made for AI agents and AI
apps.
Sandboxes allow AI agents and apps to have long running cloud secure environments.
In these environments, large language models can use the same tools as humans do.

E2B Python SDK supports both sync and async API:

```py
from e2b import Sandbox

# Create sandbox
sandbox = Sandbox.create()
```

```py
from e2b import AsyncSandbox

# Create sandbox
sandbox = await AsyncSandbox.create()
```
"""
__all__ = ["ApiClient", "client", "ConnectionConfig", "ProxyTypes", "SandboxException", "TimeoutException", "NotFoundException", "AuthenticationException", "InvalidArgumentException", "NotEnoughSpaceException", "TemplateException", "BuildException", "FileUploadException", "SandboxInfo", "SandboxMetrics", "ProcessInfo", "SandboxQuery", "SandboxState", "SandboxMetrics", "CommandResult", "Stderr", "Stdout", "CommandExitException", "PtyOutput", "PtySize", "FilesystemEvent", "FilesystemEventType", "EntryInfo", "WriteInfo", "FileType", "Sandbox", "SandboxPaginator", "WatchHandle", "CommandHandle", "OutputHandler", "AsyncSandboxPaginator", "AsyncSandbox", "AsyncWatchHandle", "AsyncCommandHandle", "Template", "AsyncTemplate", "TemplateBase", "TemplateClass", "wait_for_file", "wait_for_url", "wait_for_port", "wait_for_process", "wait_for_timeout"]
