"""
This type stub file was generated by pyright.
"""

from typing import Any, AsyncGenerator, Coroutine, Generator, Optional
from httpcore import AsyncConnectionPool, ConnectionPool
from e2b.envd.filesystem import filesystem_pb2 as filesystem_dot_filesystem__pb2

FilesystemName = ...
class FilesystemClient:
    def __init__(self, base_url: str, *, pool: Optional[ConnectionPool] = ..., async_pool: Optional[AsyncConnectionPool] = ..., compressor=..., json=..., **opts) -> None:
        ...
    
    def stat(self, req: filesystem_dot_filesystem__pb2.StatRequest, **opts) -> filesystem_dot_filesystem__pb2.StatResponse:
        ...
    
    def astat(self, req: filesystem_dot_filesystem__pb2.StatRequest, **opts) -> Coroutine[Any, Any, filesystem_dot_filesystem__pb2.StatResponse]:
        ...
    
    def make_dir(self, req: filesystem_dot_filesystem__pb2.MakeDirRequest, **opts) -> filesystem_dot_filesystem__pb2.MakeDirResponse:
        ...
    
    def amake_dir(self, req: filesystem_dot_filesystem__pb2.MakeDirRequest, **opts) -> Coroutine[Any, Any, filesystem_dot_filesystem__pb2.MakeDirResponse]:
        ...
    
    def move(self, req: filesystem_dot_filesystem__pb2.MoveRequest, **opts) -> filesystem_dot_filesystem__pb2.MoveResponse:
        ...
    
    def amove(self, req: filesystem_dot_filesystem__pb2.MoveRequest, **opts) -> Coroutine[Any, Any, filesystem_dot_filesystem__pb2.MoveResponse]:
        ...
    
    def list_dir(self, req: filesystem_dot_filesystem__pb2.ListDirRequest, **opts) -> filesystem_dot_filesystem__pb2.ListDirResponse:
        ...
    
    def alist_dir(self, req: filesystem_dot_filesystem__pb2.ListDirRequest, **opts) -> Coroutine[Any, Any, filesystem_dot_filesystem__pb2.ListDirResponse]:
        ...
    
    def remove(self, req: filesystem_dot_filesystem__pb2.RemoveRequest, **opts) -> filesystem_dot_filesystem__pb2.RemoveResponse:
        ...
    
    def aremove(self, req: filesystem_dot_filesystem__pb2.RemoveRequest, **opts) -> Coroutine[Any, Any, filesystem_dot_filesystem__pb2.RemoveResponse]:
        ...
    
    def watch_dir(self, req: filesystem_dot_filesystem__pb2.WatchDirRequest, **opts) -> Generator[filesystem_dot_filesystem__pb2.WatchDirResponse, Any, None]:
        ...
    
    def awatch_dir(self, req: filesystem_dot_filesystem__pb2.WatchDirRequest, **opts) -> AsyncGenerator[filesystem_dot_filesystem__pb2.WatchDirResponse, Any]:
        ...
    
    def create_watcher(self, req: filesystem_dot_filesystem__pb2.CreateWatcherRequest, **opts) -> filesystem_dot_filesystem__pb2.CreateWatcherResponse:
        ...
    
    def acreate_watcher(self, req: filesystem_dot_filesystem__pb2.CreateWatcherRequest, **opts) -> Coroutine[Any, Any, filesystem_dot_filesystem__pb2.CreateWatcherResponse]:
        ...
    
    def get_watcher_events(self, req: filesystem_dot_filesystem__pb2.GetWatcherEventsRequest, **opts) -> filesystem_dot_filesystem__pb2.GetWatcherEventsResponse:
        ...
    
    def aget_watcher_events(self, req: filesystem_dot_filesystem__pb2.GetWatcherEventsRequest, **opts) -> Coroutine[Any, Any, filesystem_dot_filesystem__pb2.GetWatcherEventsResponse]:
        ...
    
    def remove_watcher(self, req: filesystem_dot_filesystem__pb2.RemoveWatcherRequest, **opts) -> filesystem_dot_filesystem__pb2.RemoveWatcherResponse:
        ...
    
    def aremove_watcher(self, req: filesystem_dot_filesystem__pb2.RemoveWatcherRequest, **opts) -> Coroutine[Any, Any, filesystem_dot_filesystem__pb2.RemoveWatcherResponse]:
        ...
    


