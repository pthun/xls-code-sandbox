"""
This type stub file was generated by pyright.
"""

from typing import Any, AsyncGenerator, Coroutine, Generator, Optional
from httpcore import AsyncConnectionPool, ConnectionPool
from e2b.envd.process import process_pb2 as process_dot_process__pb2

ProcessName = ...
class ProcessClient:
    def __init__(self, base_url: str, *, pool: Optional[ConnectionPool] = ..., async_pool: Optional[AsyncConnectionPool] = ..., compressor=..., json=..., **opts) -> None:
        ...
    
    def list(self, req: process_dot_process__pb2.ListRequest, **opts) -> process_dot_process__pb2.ListResponse:
        ...
    
    def alist(self, req: process_dot_process__pb2.ListRequest, **opts) -> Coroutine[Any, Any, process_dot_process__pb2.ListResponse]:
        ...
    
    def connect(self, req: process_dot_process__pb2.ConnectRequest, **opts) -> Generator[process_dot_process__pb2.ConnectResponse, Any, None]:
        ...
    
    def aconnect(self, req: process_dot_process__pb2.ConnectRequest, **opts) -> AsyncGenerator[process_dot_process__pb2.ConnectResponse, Any]:
        ...
    
    def start(self, req: process_dot_process__pb2.StartRequest, **opts) -> Generator[process_dot_process__pb2.StartResponse, Any, None]:
        ...
    
    def astart(self, req: process_dot_process__pb2.StartRequest, **opts) -> AsyncGenerator[process_dot_process__pb2.StartResponse, Any]:
        ...
    
    def update(self, req: process_dot_process__pb2.UpdateRequest, **opts) -> process_dot_process__pb2.UpdateResponse:
        ...
    
    def aupdate(self, req: process_dot_process__pb2.UpdateRequest, **opts) -> Coroutine[Any, Any, process_dot_process__pb2.UpdateResponse]:
        ...
    
    def stream_input(self, req: process_dot_process__pb2.StreamInputRequest, **opts) -> process_dot_process__pb2.StreamInputResponse:
        ...
    
    def astream_input(self, req: process_dot_process__pb2.StreamInputRequest, **opts) -> Coroutine[Any, Any, process_dot_process__pb2.StreamInputResponse]:
        ...
    
    def send_input(self, req: process_dot_process__pb2.SendInputRequest, **opts) -> process_dot_process__pb2.SendInputResponse:
        ...
    
    def asend_input(self, req: process_dot_process__pb2.SendInputRequest, **opts) -> Coroutine[Any, Any, process_dot_process__pb2.SendInputResponse]:
        ...
    
    def send_signal(self, req: process_dot_process__pb2.SendSignalRequest, **opts) -> process_dot_process__pb2.SendSignalResponse:
        ...
    
    def asend_signal(self, req: process_dot_process__pb2.SendSignalRequest, **opts) -> Coroutine[Any, Any, process_dot_process__pb2.SendSignalResponse]:
        ...
    


