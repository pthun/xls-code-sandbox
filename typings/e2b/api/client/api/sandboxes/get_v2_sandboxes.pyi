"""
This type stub file was generated by pyright.
"""

from typing import Optional, Union
from ...client import AuthenticatedClient
from ...models.error import Error
from ...models.listed_sandbox import ListedSandbox
from ...models.sandbox_state import SandboxState
from ...types import Response, Unset

def sync_detailed(*, client: AuthenticatedClient, metadata: Union[Unset, str] = ..., state: Union[Unset, list[SandboxState]] = ..., next_token: Union[Unset, str] = ..., limit: Union[Unset, int] = ...) -> Response[Union[Error, list[ListedSandbox]]]:
    """List all sandboxes

    Args:
        metadata (Union[Unset, str]):
        state (Union[Unset, list[SandboxState]]):
        next_token (Union[Unset, str]):
        limit (Union[Unset, int]):  Default: 100.

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[Union[Error, list['ListedSandbox']]]
    """
    ...

def sync(*, client: AuthenticatedClient, metadata: Union[Unset, str] = ..., state: Union[Unset, list[SandboxState]] = ..., next_token: Union[Unset, str] = ..., limit: Union[Unset, int] = ...) -> Optional[Union[Error, list[ListedSandbox]]]:
    """List all sandboxes

    Args:
        metadata (Union[Unset, str]):
        state (Union[Unset, list[SandboxState]]):
        next_token (Union[Unset, str]):
        limit (Union[Unset, int]):  Default: 100.

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Union[Error, list['ListedSandbox']]
    """
    ...

async def asyncio_detailed(*, client: AuthenticatedClient, metadata: Union[Unset, str] = ..., state: Union[Unset, list[SandboxState]] = ..., next_token: Union[Unset, str] = ..., limit: Union[Unset, int] = ...) -> Response[Union[Error, list[ListedSandbox]]]:
    """List all sandboxes

    Args:
        metadata (Union[Unset, str]):
        state (Union[Unset, list[SandboxState]]):
        next_token (Union[Unset, str]):
        limit (Union[Unset, int]):  Default: 100.

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[Union[Error, list['ListedSandbox']]]
    """
    ...

async def asyncio(*, client: AuthenticatedClient, metadata: Union[Unset, str] = ..., state: Union[Unset, list[SandboxState]] = ..., next_token: Union[Unset, str] = ..., limit: Union[Unset, int] = ...) -> Optional[Union[Error, list[ListedSandbox]]]:
    """List all sandboxes

    Args:
        metadata (Union[Unset, str]):
        state (Union[Unset, list[SandboxState]]):
        next_token (Union[Unset, str]):
        limit (Union[Unset, int]):  Default: 100.

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Union[Error, list['ListedSandbox']]
    """
    ...

