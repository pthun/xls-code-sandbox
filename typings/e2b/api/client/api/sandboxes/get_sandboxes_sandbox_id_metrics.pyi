"""
This type stub file was generated by pyright.
"""

from typing import Optional, Union
from ...client import AuthenticatedClient
from ...models.error import Error
from ...models.sandbox_metric import SandboxMetric
from ...types import Response, Unset

def sync_detailed(sandbox_id: str, *, client: AuthenticatedClient, start: Union[Unset, int] = ..., end: Union[Unset, int] = ...) -> Response[Union[Error, list[SandboxMetric]]]:
    """Get sandbox metrics

    Args:
        sandbox_id (str):
        start (Union[Unset, int]):
        end (Union[Unset, int]): Unix timestamp for the end of the interval, in seconds, for which
            the metrics

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[Union[Error, list['SandboxMetric']]]
    """
    ...

def sync(sandbox_id: str, *, client: AuthenticatedClient, start: Union[Unset, int] = ..., end: Union[Unset, int] = ...) -> Optional[Union[Error, list[SandboxMetric]]]:
    """Get sandbox metrics

    Args:
        sandbox_id (str):
        start (Union[Unset, int]):
        end (Union[Unset, int]): Unix timestamp for the end of the interval, in seconds, for which
            the metrics

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Union[Error, list['SandboxMetric']]
    """
    ...

async def asyncio_detailed(sandbox_id: str, *, client: AuthenticatedClient, start: Union[Unset, int] = ..., end: Union[Unset, int] = ...) -> Response[Union[Error, list[SandboxMetric]]]:
    """Get sandbox metrics

    Args:
        sandbox_id (str):
        start (Union[Unset, int]):
        end (Union[Unset, int]): Unix timestamp for the end of the interval, in seconds, for which
            the metrics

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Response[Union[Error, list['SandboxMetric']]]
    """
    ...

async def asyncio(sandbox_id: str, *, client: AuthenticatedClient, start: Union[Unset, int] = ..., end: Union[Unset, int] = ...) -> Optional[Union[Error, list[SandboxMetric]]]:
    """Get sandbox metrics

    Args:
        sandbox_id (str):
        start (Union[Unset, int]):
        end (Union[Unset, int]): Unix timestamp for the end of the interval, in seconds, for which
            the metrics

    Raises:
        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.
        httpx.TimeoutException: If the request takes longer than Client.timeout.

    Returns:
        Union[Error, list['SandboxMetric']]
    """
    ...

