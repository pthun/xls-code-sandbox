"""
This type stub file was generated by pyright.
"""

from collections.abc import Mapping, MutableMapping
from http import HTTPStatus
from typing import BinaryIO, Generic, IO, Literal, Optional, TypeVar, Union
from attrs import define

"""Contains some shared types for properties"""
class Unset:
    def __bool__(self) -> Literal[False]:
        ...
    


UNSET: Unset = ...
FileContent = Union[IO[bytes], bytes, str]
FileTypes = Union[tuple[Optional[str], FileContent, Optional[str]], tuple[Optional[str], FileContent, Optional[str], Mapping[str, str]],]
RequestFiles = list[tuple[str, FileTypes]]
@define
class File:
    """Contains information for file uploads"""
    payload: BinaryIO
    file_name: Optional[str] = ...
    mime_type: Optional[str] = ...
    def to_tuple(self) -> FileTypes:
        """Return a tuple representation that httpx will accept for multipart/form-data"""
        ...
    


T = TypeVar("T")
@define
class Response(Generic[T]):
    """A response from an endpoint"""
    status_code: HTTPStatus
    content: bytes
    headers: MutableMapping[str, str]
    parsed: Optional[T]
    ...


__all__ = ["UNSET", "File", "FileTypes", "RequestFiles", "Response", "Unset"]
