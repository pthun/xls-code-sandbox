"""
This type stub file was generated by pyright.
"""

import datetime
from collections.abc import Mapping
from typing import Any, TYPE_CHECKING, TypeVar
from uuid import UUID
from attrs import define as _attrs_define
from ..models.identifier_masking_details import IdentifierMaskingDetails

if TYPE_CHECKING:
    ...
T = TypeVar("T", bound="CreatedAccessToken")
@_attrs_define
class CreatedAccessToken:
    """
    Attributes:
        created_at (datetime.datetime): Timestamp of access token creation
        id (UUID): Identifier of the access token
        mask (IdentifierMaskingDetails):
        name (str): Name of the access token
        token (str): The fully created access token
    """
    created_at: datetime.datetime
    id: UUID
    mask: IdentifierMaskingDetails
    name: str
    token: str
    additional_properties: dict[str, Any] = ...
    def to_dict(self) -> dict[str, Any]:
        ...
    
    @classmethod
    def from_dict(cls: type[T], src_dict: Mapping[str, Any]) -> T:
        ...
    
    @property
    def additional_keys(self) -> list[str]:
        ...
    
    def __getitem__(self, key: str) -> Any:
        ...
    
    def __setitem__(self, key: str, value: Any) -> None:
        ...
    
    def __delitem__(self, key: str) -> None:
        ...
    
    def __contains__(self, key: str) -> bool:
        ...
    


