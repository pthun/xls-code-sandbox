"""
This type stub file was generated by pyright.
"""

from collections.abc import Mapping
from typing import Any, TYPE_CHECKING, TypeVar, Union
from attrs import define as _attrs_define
from ..models.template_build_status import TemplateBuildStatus
from ..types import Unset
from ..models.build_log_entry import BuildLogEntry
from ..models.build_status_reason import BuildStatusReason

if TYPE_CHECKING:
    ...
T = TypeVar("T", bound="TemplateBuild")
@_attrs_define
class TemplateBuild:
    """
    Attributes:
        build_id (str): Identifier of the build
        log_entries (list['BuildLogEntry']): Build logs structured
        logs (list[str]): Build logs
        status (TemplateBuildStatus): Status of the template
        template_id (str): Identifier of the template
        reason (Union[Unset, BuildStatusReason]):
    """
    build_id: str
    log_entries: list[BuildLogEntry]
    logs: list[str]
    status: TemplateBuildStatus
    template_id: str
    reason: Union[Unset, BuildStatusReason] = ...
    additional_properties: dict[str, Any] = ...
    def to_dict(self) -> dict[str, Any]:
        ...
    
    @classmethod
    def from_dict(cls: type[T], src_dict: Mapping[str, Any]) -> T:
        ...
    
    @property
    def additional_keys(self) -> list[str]:
        ...
    
    def __getitem__(self, key: str) -> Any:
        ...
    
    def __setitem__(self, key: str, value: Any) -> None:
        ...
    
    def __delitem__(self, key: str) -> None:
        ...
    
    def __contains__(self, key: str) -> bool:
        ...
    


