"""
This type stub file was generated by pyright.
"""

from collections.abc import Mapping
from typing import Any, TYPE_CHECKING, TypeVar
from attrs import define as _attrs_define
from ..models.disk_metrics import DiskMetrics

if TYPE_CHECKING:
    ...
T = TypeVar("T", bound="NodeMetrics")
@_attrs_define
class NodeMetrics:
    """Node metrics

    Attributes:
        allocated_cpu (int): Number of allocated CPU cores
        allocated_memory_bytes (int): Amount of allocated memory in bytes
        cpu_count (int): Total number of CPU cores on the node
        cpu_percent (int): Node CPU usage percentage
        disks (list['DiskMetrics']): Detailed metrics for each disk/mount point
        memory_total_bytes (int): Total node memory in bytes
        memory_used_bytes (int): Node memory used in bytes
    """
    allocated_cpu: int
    allocated_memory_bytes: int
    cpu_count: int
    cpu_percent: int
    disks: list[DiskMetrics]
    memory_total_bytes: int
    memory_used_bytes: int
    additional_properties: dict[str, Any] = ...
    def to_dict(self) -> dict[str, Any]:
        ...
    
    @classmethod
    def from_dict(cls: type[T], src_dict: Mapping[str, Any]) -> T:
        ...
    
    @property
    def additional_keys(self) -> list[str]:
        ...
    
    def __getitem__(self, key: str) -> Any:
        ...
    
    def __setitem__(self, key: str, value: Any) -> None:
        ...
    
    def __delitem__(self, key: str) -> None:
        ...
    
    def __contains__(self, key: str) -> bool:
        ...
    


