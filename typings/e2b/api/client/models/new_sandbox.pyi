"""
This type stub file was generated by pyright.
"""

from collections.abc import Mapping
from typing import Any, TypeVar, Union
from attrs import define as _attrs_define
from ..types import Unset

T = TypeVar("T", bound="NewSandbox")
@_attrs_define
class NewSandbox:
    """
    Attributes:
        template_id (str): Identifier of the required template
        allow_internet_access (Union[Unset, bool]): Allow sandbox to access the internet
        auto_pause (Union[Unset, bool]): Automatically pauses the sandbox after the timeout Default: False.
        env_vars (Union[Unset, Any]):
        metadata (Union[Unset, Any]):
        secure (Union[Unset, bool]): Secure all system communication with sandbox
        timeout (Union[Unset, int]): Time to live for the sandbox in seconds. Default: 15.
    """
    template_id: str
    allow_internet_access: Union[Unset, bool] = ...
    auto_pause: Union[Unset, bool] = ...
    env_vars: Union[Unset, Any] = ...
    metadata: Union[Unset, Any] = ...
    secure: Union[Unset, bool] = ...
    timeout: Union[Unset, int] = ...
    additional_properties: dict[str, Any] = ...
    def to_dict(self) -> dict[str, Any]:
        ...
    
    @classmethod
    def from_dict(cls: type[T], src_dict: Mapping[str, Any]) -> T:
        ...
    
    @property
    def additional_keys(self) -> list[str]:
        ...
    
    def __getitem__(self, key: str) -> Any:
        ...
    
    def __setitem__(self, key: str, value: Any) -> None:
        ...
    
    def __delitem__(self, key: str) -> None:
        ...
    
    def __contains__(self, key: str) -> bool:
        ...
    


